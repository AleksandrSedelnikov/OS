#RELEASE 1.0 (количество строчек: 79)


# коды ошибок
code_01=`echo "INFO: ошибка при выполнении проверки СФ, точнее: Код 01 вызывается(был вызван) в случае срабатывания проверки(полученный ответ дал пустой ответ) на существования файла(ов) в системе."`
code_02=`echo "INFO: ошибка при выполнении проверки ЕП, точнее: Код 02 вызывается(был вызван) в случае срабатывания проверки(полученный ответ дал больше одного пути) на единичность пути к файлу(ам)."`
code_03=`echo "INFO: ошибка при выполнении проверки КВП, точнее: Код 03 вызывается(был вызван) в случае срабатывания проверки(полученный ответ дал либо 0 или больше 2-х введенных параметров) на количество введенных параметров."`
code_04=`echo "INFO: ошибка при выполнении проверки ДПТвФ, точнее: Код 04 вызывается(был вызван) в случае срабатывания проверки(полученный ответ был пустым или не yes,no) на добавление пустого текста в файл."`

# коды поведения скрипта при определенных решениях пользователя
code_executed=`echo "INFO: завершение выполнения скрипта при добавлении пустого текста в файл, точнее: Код executed вызывается(был вызван) в случае получения ответа на решение(ответ на решение был no) не добавлять пустую строчку в файл."`

# выполнение основного скрипта
echo "Введите один или два параметра(не больше!): "; read parametr # вводится(ятся) параметр(ы)
x=$(echo $parametr | wc -w) # количество введённых параметров
if [ "$x" != "1" ] && [ "$x" != "2" ] # проверка количество: 1 или 2 - зеленный свет, 0 или больше 2 - красный
	then 
	echo "Error code stopped script: 03" # ошибка при выполнении проверки введенных параметров
	echo "$code_03" # вызов информации об ошибке
else
	case $x in # массив команд для одного или двух параметров
	"1") # введен один параметр
		parametr_1=`find ~ -name $parametr -type f 2>~/error` # поиск пути(ей) до файла с параметром
		proverka1=`find ~ -name $parametr -type f 2>~/error | wc -l` # подсчёт количества путей до файла с параметром
		if [ "$parametr_1" != "" ] # проверка существования файла с параметром
		then
			if [ "$proverka1" == 1 ] # проверка единичности пути к файлу
			then
				echo "Введите текст: "; read text # ввод текста 
				if [ "$text" != "" ] # проверка что введённый текст не пустой
					then # если не пустой
						echo "Введённый Вами текст был добавлен в файл с параметром"
						echo "$text" >> $parametr_1 # добавление введенного текста в конец файла с именем параметра
					else # если текст пустой
						echo "Введённый Вами текст не содержит символов, хотите добавить пустую строчку?"
						echo "Если да - yes, если нет - no"; read resh
						if [ "$resh" == "yes" ] # проверка введенное решение yes
							then
								echo "Введённый Вами текст был добавлен в файл с параметром"
								echo "$text" >> $parametr_1 # добавление введенного текста в конец файла с именем параметра
							elif [ "$resh" == "no" ] # проверка введенное решение no
								then
									echo "Users desicion stopped script: executed" # прекращение работы скрипта из-за выбора пользователем не добавлять пустой текст
									echo "$code_executed" # вызов информации об коде завершения выполнения скрипта
							else # пустое или другое введенное решение
								echo "Error code stopped script: 04" # ошибка при проверки ввода пользователем решения по добавлению пустого текста в файл
                                echo "$code_04" # вызов информации об ошибке

						fi
				fi
			else
				echo "Error code stopped script: 02" # ошибка при выполнении проверки ЕП
				echo "$code_02" # вызов информации об ошибке
			fi
		else
			echo "Error code stopped script: 01" # ошибка при выполнении проверки СФ
			echo "$code_01" # вызов информации об ошибке
		fi
	;;
	"2") # введено два параметра
		parametr1=(${parametr}) # создание массива параметров
		parametr1_1=`find ~ -name ${parametr1[0]} -type f 2>~/error` # поиск пути(ей) до файла под первым параметром
		parametr1_2=`find ~ -name ${parametr1[1]} -type f 2>~/error` # поиск пути(ей) до файла под вторым параметром
		proverka2=`find ~ -name ${parametr1[0]} -type f 2>~/error | wc -l` # подсчёт количества путей до файла с первым параметром
		proverka3=`find ~ -name ${parametr1[1]} -type f 2>~/error | wc -l` # подсчёт количества путей до файла с вторым параметром
		if [ "$parametr1_1" != "" ] && [ "$parametr1_2" != "" ] # проверка существования файла с первым и вторым параметром
		then
			if [ "$proverka2" == 1 ] && [ "$proverka3" == 1 ] # проверка единичности пути файлов
			then
			echo "Слова из файла под вторым параметром добавлены в файл с первым параметром"
			cat $parametr1_2 >> $parametr1_1 # добавление информации из файла под вторым параметра в файл под первым параметром
			else
				echo "Error code stopped script: 02" # ошибка при выполнении проверки ЕП
				echo "$code_02" # вызов информации об ошибке
			fi
		else
			echo "Error code stopped script: 01" # ошибка при выполнении проверки СФ
			echo "$code_01" # вызов информации об ошибке
		fi
	;;
	esac
fi 
echo "Script has been finished working." # скрипт завершил свою работу удачно
